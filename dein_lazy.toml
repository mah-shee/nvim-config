[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
hook_add = '''
let g:deoplete#sources#jedi#server_timeout=100
let g:deoplete#sources#jedi#statement_length=100
let g:jedi#completions_enabled = 0
'''

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = ['javascript', 'javascript.jsx', 'jsx']
build = 'npm install -g tern'
hook_add = '''
let g:deoplete#sources#ternjs#filetypes = ['jsx', 'javascript.jsx']
let g:deoplete#sources#ternjs#depths = 1
let g:deoplete#sources#ternjs#types = 1
" Use tern_for_vim.
let g:tern#command = ["tern"]
let g:tern#arguments = ["--persistent"]
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
nnoremap <silent> <C-n>
\ :<C-u>Defx -listed -resume -buffer-name=tab`tabpagenr()`<CR>
'''
hook_source = '''
call defx#custom#column('mark', {
        \ 'readonly_icon': '✗',
        \ 'selected_icon': '✓',
        \ })
call defx#custom#column('icon', {
        \ 'directory_icon': '▸',
        \ 'opened_icon': '▾',
        \ 'root_icon': ' ',
        \ })
'''
[plugins.ftplugin]
defx = '''
" Define mappings
nnoremap <silent><buffer><expr> <CR>
\ defx#async_action('drop')
nnoremap <silent><buffer><expr> c
\ defx#do_action('copy')
nnoremap <silent><buffer><expr> !
\ defx#do_action('execute_command')
nnoremap <silent><buffer><expr> m
\ defx#do_action('move')
nnoremap <silent><buffer><expr> p
\ defx#do_action('paste')
nnoremap <silent><buffer><expr> l
\ defx#async_action('open')
nnoremap <silent><buffer><expr> E
\ defx#do_action('open', 'vsplit')
nnoremap <silent><buffer><expr> P
\ defx#do_action('open', 'pedit')
nnoremap <silent><buffer><expr> o
\ defx#async_action('open_or_close_tree')
nnoremap <silent><buffer><expr> O
\ defx#async_action('open_tree_recursive')
nnoremap <silent><buffer><expr> K
\ defx#do_action('new_directory')
nnoremap <silent><buffer><expr> N
\ defx#do_action('new_file')
nnoremap <silent><buffer><expr> M
\ defx#do_action('new_multiple_files')
nnoremap <silent><buffer><expr> C
\ defx#do_action('toggle_columns', 'mark:filename:type:size:time')
nnoremap <silent><buffer><expr> S
\ defx#do_action('toggle_sort', 'Time')
nnoremap <silent><buffer><expr> se
\ defx#do_action('save_session')
nnoremap <silent><buffer><expr> sl
\ defx#do_action('load_session')
nnoremap <silent><buffer><expr> d
\ defx#do_action('remove_trash')
nnoremap <silent><buffer><expr> r
\ defx#do_action('rename')
nnoremap <silent><buffer><expr> x
\ defx#do_action('execute_system')
nnoremap <silent><buffer><expr> >
\ defx#do_action('toggle_ignored_files')
nnoremap <silent><buffer><expr> .
\ defx#do_action('repeat')
nnoremap <silent><buffer><expr> yy
\ defx#do_action('yank_path')
nnoremap <silent><buffer><expr> h
\ defx#async_action('cd', ['..'])
nnoremap <silent><buffer><expr> ~
\ defx#async_action('cd')
nnoremap <silent><buffer><expr> \
\ defx#do_action('cd', getcwd())
nnoremap <silent><buffer><expr> q
\ defx#do_action('quit')
nnoremap <silent><buffer><expr> <Space>
\ defx#do_action('toggle_select') . 'j'
nnoremap <silent><buffer><expr> *
\ defx#do_action('toggle_select_all')
nnoremap <silent><buffer><expr> j
\ line('.') == line('$') ? 'gg' : 'j'
nnoremap <silent><buffer><expr> k
\ line('.') == 1 ? 'G' : 'k'
nnoremap <silent><buffer><expr> <C-l>
\ defx#do_action('redraw')
xnoremap <silent><buffer><expr> <CR>
\ defx#do_action('toggle_select_visual')
nnoremap <silent><buffer><expr> <C-g>
\ defx#do_action('print')
nnoremap <silent><buffer><expr> <Tab> winnr('$') != 1 ?
\ ':<C-u>wincmd w<CR>' :
\ ':<C-u>Defx -buffer-name=temp -split=vertical<CR>'
'''

[[plugins]]
repo = 'Shougo/neosnippet'
on_event = 'InsertEnter'
on_ft = ['snippet']
depends = ['neosnippet-snippets']
hook_source = '''
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
if has('conceal')
    set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_path = '.*'
hook_add = '''
source ~/.config/nvim/plugins/quickrun.vim
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
on_path = '.*'
hook_add = '''
let g:indentLine_char = '¦'
'''

[[plugins]]
repo = 'sjl/gundo.vim'
on_path = '.*'
hook_add = '''
nnoremap <F5> :GundoToggle<CR>
'''

[[plugins]]
repo = 'tpope/vim-endwise'
on_event = 'InsertEnter'

[[plugins]]
repo = 'tpope/vim-surround'
on_event = 'InsertEnter'

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_path = '.*'
hook_add = '''
source ~/.config/nvim/plugins/gitgutter.vim
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
on_path = '.*'
hook_add = '''
source ~/.config/nvim/plugins/fugitive.vim
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
on_path = '.*'
hook_add = '''
source ~/.config/nvim/plugins/anzu.vim
'''

[[plugins]]
repo = 'billyvg/tigris.nvim'
on_ft = ['javascript', 'javascript.jsx']
hook_post_update = '''
let g:dein#plugin.build = './install.sh'
'''
hook_add = '''
let g:tigris#enabled = 1
let g:tigris#on_the_fly_enabled = 1
let g:tigris#delay = 300
'''

[[plugins]]
repo='othree/html5.vim'
on_ft = 'html'

[[plugins]]
repo='mattn/emmet-vim'
on_ft = 'html'

[[plugins]]
repo = 'w0rp/ale'
on_ft = ['python', 'javascript']
hook_add = '''
source ~/.config/nvim/plugins/ale.vim
'''

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['python']

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = 'markdown'
